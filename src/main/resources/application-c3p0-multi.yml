# 数据源配置
spring:
  datasource:
    # 默认数据源
    db:
      name: db
      db-type: mysql
      # 数据库地址 rewriteBatchedStatements=true 开启mysql批量插入
      url: jdbc:mysql://106.14.119.3:3306/chen?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true
      # 登录用户名
      username: root
      # 登录密码
      password: youqu
      # 驱动包
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 数据源平台
      platform: mysql
      # 使用druid连接池
      type: com.alibaba.druid.pool.DruidDataSource
      # 初始化连接池数量
      initial-size: 5
      # 最大连接池数量
      max-active: 50
      # 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止
      # max-idle: 10
      # 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
      min-idle: 5
      # 获取连接时最大等待时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 是否缓存preparedStatement，也就是PSCache
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0
      max-open-prepared-statements: -1
      # 用来检测连接是否有效的sql，要求是一个查询语句.如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用
      validationQuery: SELECT 'x'
      # 保证安全性，申请连接的时候检测，不影响性能
      testWhileIdle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnBorrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false
      # 监控统计扩展插件
      filters: stat,wall,slf4j

    # 数据源2
    db2:
      name: db2
      db-type: mysql
      # 数据库地址 rewriteBatchedStatements=true 开启mysql批量插入
      url: jdbc:mysql://106.14.119.3:3306/chen2?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&rewriteBatchedStatements=true
      # 登录用户名
      username: root
      # 登录密码
      password: youqu
      # 驱动包
      driver-class-name: com.mysql.cj.jdbc.Driver
      # 数据源平台
      platform: mysql
      # 阿里druid连接池
      type: com.alibaba.druid.pool.DruidDataSource
      # 初始化连接池数量
      initial-size: 5
      # 最大连接池数量
      max-active: 50
      # 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止
      # max-idle: 10
      # 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请
      min-idle: 5
      # 获取连接时最大等待时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 是否缓存preparedStatement，也就是PSCache mysql建议false
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0
      max-open-prepared-statements: -1
      # 用来检测连接是否有效的sql，要求是一个查询语句.如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用
      validationQuery: SELECT 'x'
      # 保证安全性，申请连接的时候检测，不影响性能
      testWhileIdle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnBorrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false
      # 监控统计扩展插件
      filters: stat,wall,slf4j

    # druid配置
    druid:
      # StatViewServlet配置
      # 开启页面访问展示  路径 /druid
      stat-view-servlet:
        enabled: true
        # 根据配置中的url-pattern来访问内置监控页面，如果是以下的配置，内置监控页面的首页是/druid/index.html
        url-pattern: /druid/*
        # 允许清空数据
        reset-enable: true
        # druid登录用户名
        login-username: druid
        # druid 登录发密码
        login-password: druid
        # 如果allow没有配置或者为空，则允许所有访问;deny优先于allow，如果不在deny列表中，就算在allow列表中，也会被拒绝
        # allow: 127.0.0.1
        # deny: 127.0.0.1

      # StatFilter配置
      web-stat-filter:
        # 是否启用StatFilter 默认开启
        enabled: true
        # url-pattern:
        # profile-enable:
        # principal-cookie-name:
        # principal-session-name:
        # 过滤访问,需要排除一些不必要的url
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        # session统计功能
        session-stat-enable: true
        # session存储个数，缺省sessionStatMaxCount是1000个
        session-stat-max-count: 1000

      # filter配置
      filter:
        stat:
          # 开启filter
          enabled: true
          # 合并SQL
          merge-sql: true
          # 慢SQL记录
          log-slow-sql: true
          # 多于这个时间的SQL执行时间为慢SQL
          slow-sql-millis: 5000