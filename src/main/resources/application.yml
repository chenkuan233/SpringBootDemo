server:
  port: 443
  tomcat:
    # 编码
    uri-encoding: UTF-8
    # Tomcat可创建的最大的线程数，每一个线程处理一个请求
    max-threads: 500
    # 最小备用线程数，tomcat启动时的初始化的线程数
    min-spare-threads: 10
  # 启用https
  ssl:
    # 密钥证书路径
    key-store: classpath:keystore.p12
    # 密钥库密码
    key-store-password: 123456
    # 密钥库类型
    key-store-type: PKCS12
    # 密钥别名
    key-alias: tomcat
  servlet:
    # 打开注释，则通过【http://localhost/springBootDemo】访问
    context-path: /springBootDemo

spring:
  # 运行环境 dev:开发环境；test:测试环境；prod:生产环境；c3p0:数据库配置
  profiles:
    active: c3p0
  jpa:
    # 数据库类型
    database: mysql
    # 数据库平台
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    # 显示sql
    show-sql: true
    hibernate:
      # 没有则创建，有则更新
      ddl-auto: update
    # 禁用视图
    open-in-view: false
  jackson:
    # 时间格式
    date-format: yyyy-MM-dd HH:mm:ss
    # 时间区域
    time-zone: Asia/Chongqing
  http:
    converters:
      # 用于HTTP消息转换的首选JSON映射器
      preferred-json-mapper: gson
  gson:
    # 时间格式
    date-format: yyyy-MM-dd HH:mm:ss
  cache:
      type: redis
      redis:
        # 缓存超时时间ms
        # time-to-live: 20000
        # 是否缓存空值
        cache-null-values: false
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 使用lettuce连接池连接redis
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池中的最小空闲连接
        min-idle: 0
    # 连接超时时间（毫秒）
    timeout: 2000
  resources:
    # 自定义静态文件路径
    static-locations: classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/templates/
  thymeleaf:
    mode: HTML
    # html具有缓存的特点(热部署文件时，设为false，页面不产生缓存，及时更新)
    cache: true
    prefix: classpath:/templates/
    suffix: .html
    encoding: UTF-8

mybatis:
  # mybatis配置文件路径
  config-location: classpath:mybatis-config.xml
  # 扫描实体类所在包
  type-aliases-package: com.springBoot.entity
  # 编译后的mapper.xml扫描路径
  mapper-locations: classpath:*Mapper.xml

pagehelper:
  # 数据库方言
  helper-dialect: mysql
  # 分页的合理化数据
  reasonable: true
  # 支持通过 Mapper 接口参数来传递分页参数
  support-methods-arguments: true
  # 为了支持 startPage(Object params) 方法，增加了该参数来配置参数映射，用于从对象中根据属性名取值
  params: count=countSql

mapper:
  # 通用mapper类所在接口名称
  mappers: com.springBoot.commonMapper.MyMapper
  # 数据库
  identity: mysql